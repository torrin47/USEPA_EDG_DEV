<html lang="en" xml:lang="en"><head>
<META http-equiv="Content-Type" content="text/html">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"><META name="description" content="Publication Components Publication Components The primary data store for cataloged metadata documents is a relational database management system. Currently supported databases include: Oracle (9i, 10g ,and 11g), SQL Server (2005 and 2008), and PostgreSQL (8.3 and 8.4). The relational database contains tables associated with: resource approval status, publication method and additional identification attributes. It also contains tables for referenced users (users owning data within the catalog), remote repositories registered for synchronization, and saved searches per user. The Geoportal  will make use of the standard Java JDBC API when directly communicating with the relational database. The primary components associated with the publication of"><meta name="content-language" content="en"><link href="rsrc/htmlhelp.css" rel="stylesheet" type="text/css"><title>Geoportal Server - Publication Components</title><script type="text/javascript" language="JavaScript">
                    var pathL  = self.location.pathname.split ("/");
                    var fname = pathL[pathL.length-1];
                    var i = fname.lastIndexOf (".html");
                    if (i>=0) {
                    fname = fname.substring (0, i)
                    } else {
                    //??
                    }
                    self.location.replace ("../index.html#//" + fname);
                </script></head><!--Publication GUID: [GUID-4DA02BE7-AD9D-4B8F-8F2F-03A1389F0D20]--><!--Topic GUID: [GUID-F62CEF33-FB85-4565-9A6F-319A66AC8C1B]--><body><div id="content"><div class="header"><h1>Publication Components</h1><div id="breadcrumb"></div></div>
		<div class="section1" id="GUID-6845E37A-E826-444A-BCBD-4167D1436235" purpose="section1"><h2>Publication Components</h2><p id="GUID-CA7F8267-15AD-4901-BD16-FA04EE979BDC">The primary data store for cataloged metadata documents is a relational database management system. Currently supported databases include: Oracle (9i, 10g ,and 11g), SQL Server (2005 and 2008), and PostgreSQL (8.3 and 8.4). The relational database contains <a class="xref" rel="00t0/00t00000004n000000.htm" href="00t0/00t00000004n000000.htm">tables</a> associated with: resource approval status, publication method and additional identification attributes. It also contains tables for referenced users (users owning data within the catalog), remote repositories registered for synchronization, and saved searches per user. The geoportal will make use of the standard Java JDBC API when directly communicating with the relational database. The primary components associated with the publication of documents to the geoportal metadata catalog are depicted in the figure below.</p><p id="GUID-081CC7A4-3A68-4A5E-B681-E84B9BF438B3"><img purpose="img" placement="inline" alt="" title="" src="00t0/GUID-0569EF37-966A-4072-95F9-A38D5B1CC85E-web.png"></p><p id="GUID-21782458-B504-43AF-931C-E077CC4EFB9B">  Metadata documents that are classified as either "Approved" or "Reviewed" by an administrator will be sent to the <a class="xref" rel="00t0/00t00000003n000000.htm" href="00t0/00t00000003n000000.htm">Apache Lucene index</a> used by the geoportal. Documents stored within the index are discoverable through search. Apache Lucene implements an Analyzer during the indexing (and searching) process. The job of the Analyzer is to tokenize terms, considering language based stop words and stemming. Additional Analyzers are available through the Apache Lucene contribution community. The website has two pages exposing metadata publication end points: <ul purpose="ul" id="UL_A6B03735F2BC480EAB39209313102C54">
					<li purpose="li" id="GUID-7AA5F8F3-B13A-4B6B-AAB7-7DB4AF6FBBF8">An upload page that provides a publisher the ability to upload metadata documents from a hard drive, or from an HTTP end point</li>
					<li purpose="li" id="GUID-FA01614E-E6AF-4795-AF2C-C037CF94731F">An online editor page that provides a publisher the ability to create and edit metadata documents. Only those documents that have been created by the online editor are available for subsequent edit.</li>
				</ul> The website contains a synchronization process that allows for resource document publication from the external catalogs. The diagram below shows  The synchronizer components in more detail. </p><p id="GUID-D5455CEC-0DD8-490E-9D3D-5055D694FC73"><img purpose="img" placement="inline" alt="" title="" src="00t0/GUID-785709AF-85D8-4A1F-B8F0-0C856B44B5C1-web.png"></p><p id="GUID-0ABB315A-6444-4446-8D03-CC7911973CD5">Within the synchronization process the scheduler assigns registered resources to the queue for synchronization. The watchdog is used only in a load balanced environment to ensure the synchronization processes are coordinated. Once the queue receives resource information it acquires the resource connection information through the resource definition element and proceeds through the dedicated synchronization thread. The resource documents are either selected from the target catalog or created based on the resource information available. The output of the selection, iteration, and reading process is an xml document that will be sent through the publication request component described below. The  dedicated synchronization thread also creates a report that is visible through the geoportal user interface on the <span class="wintitle">Synchronization Report</span> page of the resource. As an option on the Create or Edit Resource page you can choose to have an e-mail of the synchronization results sent.</p><p id="GUID-D19BD68A-FF4F-44C9-AF53-3D6E970630DC">The website also exposes a REST API, allowing for compatible publication of metadata documents from client applications such as ArcCatalog. The <a class="xref" rel="00t0/00t000000003000000.htm" href="00t0/00t000000003000000.htm">Geoportal Publish Client</a> is a plug-in for ArcCatalog that batch publishes metadata documents (from folders or GeoDatabases) through this end point. </p><p id="GUID-3FA20CF6-C553-4A2C-9E6D-0D2D96A3A3A3">Each publication request implements a standardized methodology to process an XML metadata document: <ol purpose="ol" id="GUID-F1FE1301-A908-40FC-9EEA-B7C52B8C0B0B">
					<li purpose="li" id="GUID-5C98941C-482C-46B7-9539-5A8D1AF428FA">Interrogation: The document will be interrogated to determine its associated metadata standard</li>
					<li purpose="li" id="GUID-BF877F3E-CDC7-4B33-ABBB-37F57D8D9F98">Evaluation: The document will be evaluated according to the configuration file associated with the standard. Evaluation determines the primary parameters of interest (such as title, abstract, …)</li>
					<li purpose="li" id="GUID-A785A80D-DA0C-4CAE-9A1F-76F1DF29BED7">Validation: The document will be validated according to the configuration file associated with the standard. If the standard has an associated XSD (XML Schema Definition), the document will be validated against the XSD.</li>
					<li purpose="li" id="GUID-5653FDC0-B2DA-4707-9595-41BCC2AF574E">Identification: A determination is made as to whether or not the document currently exists within the catalog. This step is necessary to avoid duplication and is dependent upon the content of the document (some have internal identifiers), and the publication method (some methods can provide a unique URI associated with the source).</li>
					<li purpose="li" id="GUID-E92EDEB5-701B-4B0B-B842-430D7AD1C062">Store Document: The document is sent to the relational database for storage .</li>
					<li purpose="li" id="GUID-92A63045-BCD3-45F2-B532-A1FC4F0D9195">Update Administrative Attributes: Administrative attributes within the relational database are updated through the Java JDBC API. Included are: the publication method, an internal file identifier if available, a URI associated with the source if available.</li>
					<li purpose="li" id="GUID-A4B4C0CE-9740-418A-A55C-C32758E4231F">Index if Required: If the document has previously been Approved or Reviewed by an administrator (or when it is Approved or Reviewed), the document is sent to the Apache Lucene Index. This step makes use of a class (LuceneIndexAdapter) to communicate with the index through the Apache Lucene Java API.</li>
				</ol></p></div>
	<br><div class="footer"> Copyright © 1995-2010 Esri. All rights reserved. </div></div></body></html>